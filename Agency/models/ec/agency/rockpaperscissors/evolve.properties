seed.0 = 651
seed.1 = 68345
seed.2 = 43786
seed.3 = 738769
seed.4 = 5436378
seed.5 = 4531168
seed.6 = 1539346
seed.7 = 123486531
seed.8 = 456739
seed.9 = 67726
seed.10 = 47595647
seed.11 = 268526
seed.12 = 23823
seed.13 = 83156
seed.14 = 47564
seed.15 = 45667

breedthreads = 1
evalthreads = 1
checkpoint = false
checkpoint-prefix = ipd.chkpt.
checkpoint-modulo = 100

generations = 10000

state		= ec.simple.SimpleEvolutionState
pop			= ec.Population
init		= ec.simple.SimpleInitializer
finish		= ec.simple.SimpleFinisher
eval		= ec.agency.eval.AgencyEvaluator
exch		= ec.simple.SimpleExchanger



# How the breeding is controlled.  The number and size of sub-population
# groups is specified here; membership is controlled by configuration
# of each ScalableSubpopulation (.subpopGroup = n)
breed		= ec.agency.AgencyBreeder
breed.tournamentSize = 2
breed.numSubpopGroups = 1
breed.numSubpopGroups.0.size = 200

# only this proportion of what would otherwise be the change is made
# in subpopulation sizes
breed.changeWeight = 0.1



## Agency-Specific Stats/Output configuration
stat		= ec.agency.stats.SummaryStatsFitness
stat.file		= $out.stat
stat.num-children = 2
stat.child.0 = ec.agency.stats.PopulationSizes
stat.child.1 = ec.agency.stats.GenomeDump


# Model parameters
parent.0 = model.properties



eval.groupcreator = ec.agency.eval.RandomFlatGroupCreator
eval.groupcreator.groupSize = 2
eval.groupcreator.rounds = 10

eval.runner = ec.agency.eval.LoopRunner

eval.fitnessaggregator = ec.agency.eval.ArithmaticMeanFitnessAggregator

pop.subpops		= 2





# First Order Player
######################

pop.subpop.0		= ec.agency.SimpleScalableSubpopulation
pop.subpop.0.size 		= 100
pop.subpop.0.minIndividuals = 10
pop.subpop.0.duplicate-retries 	= 100
pop.subpop.0.subpopGroup = 0

# Charactaristics of the Species' genome/representation
#pop.subpop.0.species 		= ec.agency.NullSpecies
#pop.subpop.0.species.ind	= ec.agency.rockpaperscissors.RockPlayer
#pop.subpop.0.species.fitness 	= ec.simple.SimpleFitness

#pop.subpop.0.species.pipe = ec.breed.ReproductionPipeline
#pop.subpop.0.species.pipe.source.0 = ec.select.TournamentSelection


pop.subpop.0.species 		= ec.vector.FloatVectorSpecies
pop.subpop.0.species.min-gene = 0
pop.subpop.0.species.max-gene = 10
pop.subpop.0.species.mutation-type = gauss
pop.subpop.0.species.mutation-stdev = 1
pop.subpop.0.species.out-of-bounds-retries = 20
pop.subpop.0.species.genome-size = 3
pop.subpop.0.species.crossover-type = one
pop.subpop.0.species.mutation-prob = 0.1
# Doesn't use genome; strictly for testing purposes
pop.subpop.0.species.ind	= ec.agency.rockpaperscissors.FirstOrderPlayer
# How the fitness is evaluated
pop.subpop.0.species.fitness 	= ec.simple.SimpleFitness
# The EA pipeline for new NSP individuals.
# Parameters taken from koza.params
pop.subpop.0.species.pipe = ec.breed.MultiBreedingPipeline
pop.subpop.0.species.pipe.generate-max = false
# Subsidiary pipelines:
pop.subpop.0.species.pipe.num-sources = 3
pop.subpop.0.species.pipe.source.0 = ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0.prob = 0.2
pop.subpop.0.species.pipe.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.1 = ec.breed.ReproductionPipeline
pop.subpop.0.species.pipe.source.1.prob = 0.3
pop.subpop.0.species.pipe.source.1.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.2 = ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.2.prob = 0.5
pop.subpop.0.species.pipe.source.2.source.0 = ec.select.TournamentSelection


# Second Order Player
######################

pop.subpop.1		= ec.agency.SimpleScalableSubpopulation
pop.subpop.1.size 		= 100
pop.subpop.1.minIndividuals = 10
pop.subpop.1.duplicate-retries 	= 100
pop.subpop.1.subpopGroup = 0

pop.subpop.1.species 		= ec.vector.FloatVectorSpecies
pop.subpop.1.species.min-gene = 0
pop.subpop.1.species.max-gene = 10
pop.subpop.1.species.mutation-type = gauss
pop.subpop.1.species.mutation-stdev = 1
pop.subpop.1.species.out-of-bounds-retries = 20
pop.subpop.1.species.genome-size = 12
pop.subpop.1.species.crossover-type = one
pop.subpop.1.species.mutation-prob = 0.1
# Doesn't use genome; strictly for testing purposes
pop.subpop.1.species.ind	= ec.agency.rockpaperscissors.FirstOrderPlayer
# How the fitness is evaluated
pop.subpop.1.species.fitness 	= ec.simple.SimpleFitness
# The EA pipeline for new NSP individuals.
# Parameters taken from koza.params
pop.subpop.1.species.pipe = ec.breed.MultiBreedingPipeline
pop.subpop.1.species.pipe.generate-max = false
# Subsidiary pipelines:
pop.subpop.1.species.pipe.num-sources = 3
pop.subpop.1.species.pipe.source.0 = ec.vector.breed.VectorCrossoverPipeline
pop.subpop.1.species.pipe.source.0.prob = 0.2
pop.subpop.1.species.pipe.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.1.species.pipe.source.0.source.1 = ec.select.TournamentSelection
pop.subpop.1.species.pipe.source.1 = ec.breed.ReproductionPipeline
pop.subpop.1.species.pipe.source.1.prob = 0.3
pop.subpop.1.species.pipe.source.1.source.0 = ec.select.TournamentSelection
pop.subpop.1.species.pipe.source.2 = ec.vector.breed.VectorMutationPipeline
pop.subpop.1.species.pipe.source.2.prob = 0.5
pop.subpop.1.species.pipe.source.2.source.0 = ec.select.TournamentSelection





select.tournament.size = 2
