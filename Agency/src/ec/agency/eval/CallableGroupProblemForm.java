package ec.agency.eval;


import java.util.concurrent.Callable;


import ec.EvolutionState;



/**
 * As the name implies, this problem form implements the Callable interface and
 * is to be used with GroupProblems. It is inspired by ECJ's GroupProblemForm
 * but modifies the interface slightly.
 * 
 * There are three main reasons for using this class over the ones provided by
 * ECJ:
 * 
 * 1. Evaluation groups can be used; these can be generated by
 * EvaluationGroupers
 * 
 * 2. Problem exceptions can be handled
 * 
 * 3. Callable (like Runnable) classes can be used to make FutureTasks, to allow
 * for graceful timeouts and blocking.
 * 
 * @author ruppmatt
 * 
 */
public interface CallableGroupProblemForm extends Callable<Object> {

	/**
	 * Call once prior to evaluating the first instance of the problem in a
	 * given generation.
	 * 
	 * @param state
	 *            EvolutionState
	 * @param threadnum
	 *            Thread number making the request
	 */
	public void preprocessPopulation(final EvolutionState state, int threadnum);



	/**
	 * Call once after evaluating the final instance of a problem in a given
	 * generation.
	 * 
	 * @param state
	 *            Evolution state instance
	 * @param threadnum
	 *            Thread number making the request
	 */
	public void postprocessPopulation(final EvolutionState state, int threadnum);



	/**
	 * Prepare the problem for evaluation. Because this method now uses the
	 * Callable interface, some state information needs to be preset before
	 * making the call(...)
	 * 
	 * @param state
	 *            Evolution state instance
	 * @param group
	 *            EvaluationGroup being evaluated
	 * @param threadnum
	 *            The thread number making the request
	 */
	public void setupForEvaluation(final EvolutionState state, EvaluationGroup group, int threadnum);



	/**
	 * Reset the instance, clearing state information. This is useful for
	 * cloning.
	 */
	public void reset();



	@Override
	/**
	 * Execute the problem instance
	 */
	public Object call() throws Exception;

}
